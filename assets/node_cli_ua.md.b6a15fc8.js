import{_ as n,c as s,o as a,a as t}from"./app.c58f1cde.js";const f='{"title":"\u7528\u6237\u4FE1\u606F\u8BCA\u65AD","description":"","frontmatter":{},"headers":[],"relativePath":"node/cli/ua.md"}',p={},o=t(`<h1 id="\u7528\u6237\u4FE1\u606F\u8BCA\u65AD" tabindex="-1">\u7528\u6237\u4FE1\u606F\u8BCA\u65AD <a class="header-anchor" href="#\u7528\u6237\u4FE1\u606F\u8BCA\u65AD" aria-hidden="true">#</a></h1><p><strong>\u8BB0\u5F55\u9519\u8BEF\u60C5\u51B5\uFF0C\u548C\u7528\u6237\u5F53\u524D\u73AF\u5883\u540E\u4E0A\u62A5</strong></p><p>\u53C2\u8003\uFF1A<a href="https://github.com/FunnyLiu/feflow/blob/readsource/packages/feflow-report/src/common/utils.ts" target="_blank" rel="noopener noreferrer">feflow/utils.ts at readsource \xB7 FunnyLiu/feflow</a></p><p>\u5176\u4E2D\u5217\u4E3E\u4E86\u5404\u79CD\u6BD4\u8F83\u597D\u7684\u5B9E\u73B0\uFF0C\u6BD4\u5982\u6536\u96C6\u7528\u6237\u4FE1\u606F\u3001\u64CD\u4F5C\u7CFB\u7EDF\u4FE1\u606F\u3001\u9879\u76EE\u4FE1\u606F\u7B49\u7B49</p><div class="language-js"><pre><code><span class="token keyword">import</span> os <span class="token keyword">from</span> <span class="token string">&#39;os&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> objectFactory <span class="token keyword">from</span> <span class="token string">&#39;./objectFactory&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;child_process&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> platform <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">platform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> isWin <span class="token operator">=</span> platform <span class="token operator">===</span> <span class="token string">&#39;win32&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> isMac <span class="token operator">=</span> platform <span class="token operator">===</span> <span class="token string">&#39;darwin&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cwd <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> httpRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?\\:\\/\\/(?:[^\\/]+)\\/([^\\/]+)\\/([^\\/.]+)(?:\\.git)?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> sshRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^git@(?:[^\\:]+)\\:([^\\/]+)\\/([^\\/\\.]+)(?:\\.git)?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">exec</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">command</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> <span class="token function">execSync</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getGitStatus <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hasGitCommand <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;which git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> hasGitDir <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>cwd<span class="token punctuation">,</span> <span class="token string">&#39;.git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> hasGitCommand <span class="token operator">&amp;&amp;</span> hasGitDir<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> isGitAvailable <span class="token operator">=</span> <span class="token function">getGitStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getUserNameFromHostName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hostname <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">hostname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>upperUserName<span class="token punctuation">,</span> <span class="token operator">...</span>device<span class="token punctuation">]</span> <span class="token operator">=</span> hostname<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> upperUserName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getUserNameFromLinux</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nameFromLinux <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;whoami&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nameFromLinux <span class="token operator">===</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> nameFromLinux<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getUserNameFromGit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isGitAvailable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> nameFromLinux <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;git config user.name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> nameFromLinux<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getUserName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// mac/window</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isMac <span class="token operator">||</span> isWin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getUserNameFromHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">getUserNameFromGit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">getUserNameFromLinux</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">getUserNameFromGit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">getUserNameFromHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getProjectByPackage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> project <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> pkgPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;./package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>pkgPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    project <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>pkgPath<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> project<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getProjectByGit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token operator">?</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> project <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> gitRemoteUrl <span class="token operator">=</span> url <span class="token operator">||</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;git remote get-url origin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">urlRegex</span><span class="token operator">:</span> RegExp<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>httpRegex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>gitRemoteUrl<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    urlRegex <span class="token operator">=</span> httpRegex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sshRegex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>gitRemoteUrl<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    urlRegex <span class="token operator">=</span> sshRegex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>urlRegex<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>_<span class="token punctuation">,</span> group<span class="token punctuation">,</span> path<span class="token punctuation">]</span> <span class="token operator">=</span> urlRegex<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>gitRemoteUrl<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  project <span class="token operator">=</span> group <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>group<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> project<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getSystemInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> systemDetailInfo <span class="token operator">=</span> objectFactory
    <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;hostname&#39;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">hostname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;platform&#39;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">platform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;arch&#39;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">arch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;release&#39;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>systemDetailInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getProject <span class="token operator">=</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> local<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">pkgConfig</span><span class="token operator">:</span> any <span class="token operator">=</span> ctx<span class="token punctuation">.</span>pkgConfig <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> project <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pkgConfig<span class="token punctuation">.</span>name <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>local<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// feflow context</span>
    project <span class="token operator">=</span> pkgConfig<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// if not, read project name from project&#39;s package.json or git</span>
      project <span class="token operator">=</span> <span class="token function">getProjectByPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>project <span class="token operator">&amp;&amp;</span> isGitAvailable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        project <span class="token operator">=</span> <span class="token function">getProjectByGit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> project<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,5),e=[o];function c(u,l,k,i,r,g){return a(),s("div",null,e)}var m=n(p,[["render",c]]);export{f as __pageData,m as default};
