import{_ as n,c as s,o as a,a as t}from"./app.5fee0017.js";const h='{"title":"\u5F02\u6B65\u94FE\u8DEF","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u666E\u901APromise","slug":"\u666E\u901Apromise"},{"level":2,"title":"then\u5730\u72F1","slug":"then\u5730\u72F1"},{"level":2,"title":"Promise.all","slug":"promise-all"}],"relativePath":"javascript/async/then.md"}',p={},o=t(`<h1 id="\u5F02\u6B65\u94FE\u8DEF" tabindex="-1">\u5F02\u6B65\u94FE\u8DEF <a class="header-anchor" href="#\u5F02\u6B65\u94FE\u8DEF" aria-hidden="true">#</a></h1><h2 id="\u666E\u901Apromise" tabindex="-1">\u666E\u901APromise <a class="header-anchor" href="#\u666E\u901Apromise" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token comment">// An asynchronous operation.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;Resolved!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="then\u5730\u72F1" tabindex="-1">then\u5730\u72F1 <a class="header-anchor" href="#then\u5730\u72F1" aria-hidden="true">#</a></h2><p>\u6EE5\u7528promise.then\u4F1A\u53D8\u6210then\u5730\u72F1\uFF0C\u4E3E\u4F8B\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u662F\u5426</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>row<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;\u5173\u95ED&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\u5F00\u542F&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u9879\u76EE</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;\u63D0\u793A&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;\u786E\u5B9A&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;\u53D6\u6D88&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateProject</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> row<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;\u66F4\u65B0\u6210\u529F!&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5C31\u5E94\u8BE5\u6539\u6210\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u662F\u5426</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>row<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;\u5173\u95ED&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\u5F00\u542F&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u9879\u76EE</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;\u63D0\u793A&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;\u786E\u5B9A&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;\u53D6\u6D88&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">updateProject</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> row<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;\u66F4\u65B0\u6210\u529F!&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8BF4\u767D\u4E86\u5C31\u662F\u6BCF\u4E2Athen\u63A5\u4E00\u4E2Apromise\u5373\u53EF\u3002</p><h2 id="promise-all" tabindex="-1">Promise.all <a class="header-anchor" href="#promise-all" aria-hidden="true">#</a></h2><p>\u591A\u4E2Apromise\u5E76\u884C\uFF0C\u901A\u8FC7Promise.all\u6765\u4F18\u5316\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">[</span>category<span class="token punctuation">,</span> departments<span class="token punctuation">,</span> groups<span class="token punctuation">,</span> projects<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> users <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;working/getWorkingCategory&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;working/getDepartments&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;working/getGroups&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;working/getProjects&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">getAllUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div>`,12),e=[o];function c(u,l,i,k,r,d){return a(),s("div",null,e)}var m=n(p,[["render",c]]);export{h as __pageData,m as default};
