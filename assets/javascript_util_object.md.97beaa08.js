import{_ as n,c as s,o as a,a as p}from"./app.429e1088.js";const m='{"title":"\u5BF9\u8C61\u64CD\u4F5C","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u904D\u5386\u5BF9\u8C61","slug":"\u904D\u5386\u5BF9\u8C61"},{"level":2,"title":"\u5BF9\u8C61\u6761\u4EF6\u5C01\u88C5","slug":"\u5BF9\u8C61\u6761\u4EF6\u5C01\u88C5"},{"level":2,"title":"\u8FC7\u6EE4\u7A7A\u503C","slug":"\u8FC7\u6EE4\u7A7A\u503C"},{"level":2,"title":"\u7F13\u5B58","slug":"\u7F13\u5B58"},{"level":2,"title":"proxy\u5BF9\u8C61\u5C5E\u6027\u900F\u4F20","slug":"proxy\u5BF9\u8C61\u5C5E\u6027\u900F\u4F20"},{"level":2,"title":"mixin\u589E\u5F3A\u5BF9\u8C61","slug":"mixin\u589E\u5F3A\u5BF9\u8C61"},{"level":2,"title":"\u5BF9\u8C61\u6839\u636Evalue\u6392\u5E8F","slug":"\u5BF9\u8C61\u6839\u636Evalue\u6392\u5E8F"}],"relativePath":"javascript/util/object.md"}',t={},o=p(`<h1 id="\u5BF9\u8C61\u64CD\u4F5C" tabindex="-1">\u5BF9\u8C61\u64CD\u4F5C <a class="header-anchor" href="#\u5BF9\u8C61\u64CD\u4F5C" aria-hidden="true">#</a></h1><h2 id="\u904D\u5386\u5BF9\u8C61" tabindex="-1">\u904D\u5386\u5BF9\u8C61 <a class="header-anchor" href="#\u904D\u5386\u5BF9\u8C61" aria-hidden="true">#</a></h2><p>\u5229\u7528Object.entries\u548Cfor...of</p><div class="language-js"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>object1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre></div><p>for (const [key, value] of Object.entries(object1)) { console.log(<code>: </code>); }</p><h2 id="\u5BF9\u8C61\u6761\u4EF6\u5C01\u88C5" tabindex="-1">\u5BF9\u8C61\u6761\u4EF6\u5C01\u88C5 <a class="header-anchor" href="#\u5BF9\u8C61\u6761\u4EF6\u5C01\u88C5" aria-hidden="true">#</a></h2><p>\u901A\u8FC7...\u548C\u4E09\u76EE</p><div class="language-js"><pre><code><span class="token punctuation">{</span>
    key<span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token punctuation">(</span>keyOuter <span class="token operator">?</span> <span class="token punctuation">{</span> keyOuter <span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u8FC7\u6EE4\u7A7A\u503C" tabindex="-1">\u8FC7\u6EE4\u7A7A\u503C <a class="header-anchor" href="#\u8FC7\u6EE4\u7A7A\u503C" aria-hidden="true">#</a></h2><p>\u57FA\u4E8E lodash\uFF1A</p><div class="language-js"><pre><code><span class="token comment">/**
 * \u8FC7\u6EE4\u5BF9\u8C61\u4E2Dnull/undefined/[]/{}/&#39;&#39;
 * @param {object} obj \u9700\u8981\u8FC7\u6EE4\u7684\u5BF9\u8C61 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">omitEmpty</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">prune</span><span class="token punctuation">(</span><span class="token parameter">current</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _<span class="token punctuation">.</span><span class="token function">forOwn</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        _<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
        _<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
        _<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> _<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> _<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token function">prune</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">delete</span> current<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// remove any leftover undefined values from the delete // operation on an array</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span> _<span class="token punctuation">.</span><span class="token function">pull</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> current<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u7F13\u5B58" tabindex="-1">\u7F13\u5B58 <a class="header-anchor" href="#\u7F13\u5B58" aria-hidden="true">#</a></h2><p>\u8BE5\u65B9\u6848\u57FA\u4E8Etypescript</p><p>\u4EE5cache\u4E3A\u4F8B\uFF0C\u9996\u5148\u662F\u4E00\u4E2A\u7B80\u5355\u7684cache\u7C7B\uFF1A<a href="https://github.com/FunnyLiu/vscode-wakatime/blob/readsource/src/cache/memory-storage.ts#L0" target="_blank" rel="noopener noreferrer">\u7B80\u5355\u7684cache\u7C7B</a>\uFF1A</p><div class="language-js"><pre><code><span class="token comment">// \u4E00\u4E2A\u7B80\u5355\u7684cache \u7C7B</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MemoryStorage</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token literal-property property">memCache</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> getItem<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>key<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>memCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>memCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>memCache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><p>\u53EF\u4EE5\u770B\u5230\u53EA\u662F\u505A\u4E86\u7B80\u5355\u7684get\u548Cset\uFF0C\u5982\u679C\u9700\u8981\u7ED9\u5176\u589E\u52A0\u8FC7\u671F\u65F6\u95F4\u7684\u8BDD\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4EE3\u7406\u6A21\u5F0F\u6765\u5B8C\u6210\uFF0C\u518D\u5C01\u88C5\u4E00\u4E2A<a href="https://github.com/FunnyLiu/vscode-wakatime/blob/readsource/src/cache/expiration-strategy.ts#L15" target="_blank" rel="noopener noreferrer">\u5E26\u8FC7\u671F\u7B56\u7565\u7684cache\u7C7B</a>:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> MemoryStorage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./memory-storage&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">IExpiringCacheItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">createdAt</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
        <span class="token literal-property property">ttl</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">IOptions</span> <span class="token punctuation">{</span>
    ttl<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    isLazy<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
    isCachedForever<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E00\u4E2A\u5E26\u8FC7\u671F\u65F6\u95F4\u529F\u80FD\u7684cache\u7C7B\uFF0C\u5BF9\u666E\u901A\u7684cache\u7C7B\u5305\u88C5\u4E86\u4E00\u5C42\u8FDB\u884C\u4E86\u4EE3\u7406\u6A21\u5F0F\uFF0C\u4EE5\u53CApromise\u7684\u5C01\u88C5</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ExpirationStrategy</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> readonly storage<span class="token operator">:</span> MemoryStorage<span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">storage</span><span class="token operator">:</span> MemoryStorage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>storage <span class="token operator">=</span> storage<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> getItem<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>key<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> _</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span>getItem<span class="token operator">&lt;</span>IExpiringCacheItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>meta <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>ttl <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isItemExpired</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            item <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> IOptions<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        options <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">ttl</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token literal-property property">isLazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isCachedForever</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token operator">...</span>options <span class="token punctuation">}</span>

        <span class="token keyword">let</span> meta <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>isCachedForever<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            meta <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">ttl</span><span class="token operator">:</span> options<span class="token punctuation">.</span>ttl<span class="token operator">!</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span>
                <span class="token literal-property property">createdAt</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>isLazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unsetKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>ttl<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">{</span>meta<span class="token punctuation">,</span> content<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token function">isItemExpired</span><span class="token punctuation">(</span>item<span class="token operator">:</span> IExpiringCacheItem<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>createdAt <span class="token operator">+</span> item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>ttl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">unsetKey</span><span class="token punctuation">(</span>key<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u540E\u5C06\u7B2C\u4E00\u4E2Acache\u7C7B\u4F5C\u4E3A\u5B9E\u4F8B\u5316\u5BF9\u8C61\u4F20\u5165\u5373\u53EF:</p><div class="language-js"><pre><code><span class="token keyword">this</span><span class="token punctuation">.</span>cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExpirationStrategy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MemoryStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4ECE\u800C\u5B8C\u6210\u6574\u4E2A\u4EE3\u7406\u8FC7\u7A0B\u3002</p><h2 id="proxy\u5BF9\u8C61\u5C5E\u6027\u900F\u4F20" tabindex="-1">proxy\u5BF9\u8C61\u5C5E\u6027\u900F\u4F20 <a class="header-anchor" href="#proxy\u5BF9\u8C61\u5C5E\u6027\u900F\u4F20" aria-hidden="true">#</a></h2><p>\u627Ebridge.a\u5176\u5B9E\u5C31\u662F\u53BB\u627Ebridge.rnCallNative.a</p><p>\u9002\u5408\u4E8E\u5C06\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u6240\u6709\u4E1C\u897F\uFF0C\u6302\u5230\u53E6\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u5F80\u5916\u53BB\u66B4\u9732</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> bridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>bridgeBase<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> prop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>supportBridgeName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span>rnCallNative <span class="token operator">||</span> f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>bridge<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="mixin\u589E\u5F3A\u5BF9\u8C61" tabindex="-1">mixin\u589E\u5F3A\u5BF9\u8C61 <a class="header-anchor" href="#mixin\u589E\u5F3A\u5BF9\u8C61" aria-hidden="true">#</a></h2><p>\u5F53\u5BF9\u8C61\u7684\u65B9\u6CD5\u9700\u8981\u533A\u5206\u547D\u540D\u7A7A\u95F4\u6216\u8005\u8BF4\u662F\u5916\u90E8\u589E\u5F3A\uFF0C\u53EF\u4EE5\u901A\u8FC7mixin\u7684\u601D\u8DEF\u3002</p><p>\u53C2\u8003<a href="https://github.com/FunnyLiu/cropperjs/blob/readsource/src/js/cropper.js#L448" target="_blank" rel="noopener noreferrer">\u7B14\u8BB0\u5185\u5BB9</a></p><div class="language-js"><pre><code><span class="token comment">//mixin\u6A21\u5F0F\u6269\u5C55Cropper\u7C7B</span>
<span class="token function">assign</span><span class="token punctuation">(</span><span class="token class-name">Cropper</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> render<span class="token punctuation">,</span> preview<span class="token punctuation">,</span> events<span class="token punctuation">,</span> handlers<span class="token punctuation">,</span> change<span class="token punctuation">,</span> methods<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><p>\u901A\u8FC7\u5176\u4ED6\u51E0\u4E2A\u6587\u4EF6\u66B4\u9732\u4E0D\u540C\u7684\u65B9\u6CD5\u6765\u589E\u5F3A\u5BF9\u8C61\uFF0Cassign\u51FD\u6570\u4E3A\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> assign <span class="token operator">=</span> Object<span class="token punctuation">.</span>assign <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token function">assign</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> args<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    args<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> arg<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5176\u4ED6\u7684\u6587\u4EF6\u5982event\uFF0C\u66B4\u9732\u51E0\u4E2A\u51FD\u6570\u5373\u53EF\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  <span class="token constant">EVENT_CROP</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_CROP_END</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_CROP_MOVE</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_CROP_START</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_DBLCLICK</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_POINTER_DOWN</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_POINTER_MOVE</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_POINTER_UP</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_RESIZE</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_WHEEL</span><span class="token punctuation">,</span>
  <span class="token constant">EVENT_ZOOM</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./constants&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  addListener<span class="token punctuation">,</span>
  isFunction<span class="token punctuation">,</span>
  removeListener<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utilities&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> element<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cropper <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>cropstart<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP_START</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>cropstart<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>cropmove<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP_MOVE</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>cropmove<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>cropend<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP_END</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>cropend<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>crop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>crop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_ZOOM</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">addListener</span><span class="token punctuation">(</span>cropper<span class="token punctuation">,</span> <span class="token constant">EVENT_POINTER_DOWN</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onCropStart <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cropStart</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>zoomable <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>zoomOnWheel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>cropper<span class="token punctuation">,</span> <span class="token constant">EVENT_WHEEL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onWheel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wheel</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">passive</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">capture</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>toggleDragModeOnDblclick<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>cropper<span class="token punctuation">,</span> <span class="token constant">EVENT_DBLCLICK</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onDblclick <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dblclick</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">addListener</span><span class="token punctuation">(</span>
      element<span class="token punctuation">.</span>ownerDocument<span class="token punctuation">,</span>
      <span class="token constant">EVENT_POINTER_MOVE</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onCropMove <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cropMove</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">addListener</span><span class="token punctuation">(</span>
      element<span class="token punctuation">.</span>ownerDocument<span class="token punctuation">,</span>
      <span class="token constant">EVENT_POINTER_UP</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onCropEnd <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cropEnd</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>responsive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">addListener</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token constant">EVENT_RESIZE</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onResize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">unbind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> element<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cropper <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>cropstart<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP_START</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>cropstart<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>cropmove<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP_MOVE</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>cropmove<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>cropend<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP_END</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>cropend<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>crop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_CROP</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>crop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token constant">EVENT_ZOOM</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">removeListener</span><span class="token punctuation">(</span>cropper<span class="token punctuation">,</span> <span class="token constant">EVENT_POINTER_DOWN</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onCropStart<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>zoomable <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>zoomOnWheel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>cropper<span class="token punctuation">,</span> <span class="token constant">EVENT_WHEEL</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onWheel<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">passive</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">capture</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>toggleDragModeOnDblclick<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>cropper<span class="token punctuation">,</span> <span class="token constant">EVENT_DBLCLICK</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onDblclick<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">removeListener</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>ownerDocument<span class="token punctuation">,</span> <span class="token constant">EVENT_POINTER_MOVE</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onCropMove<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">removeListener</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>ownerDocument<span class="token punctuation">,</span> <span class="token constant">EVENT_POINTER_UP</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onCropEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>responsive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token constant">EVENT_RESIZE</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onResize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


</code></pre></div><h2 id="\u5BF9\u8C61\u6839\u636Evalue\u6392\u5E8F" tabindex="-1">\u5BF9\u8C61\u6839\u636Evalue\u6392\u5E8F <a class="header-anchor" href="#\u5BF9\u8C61\u6839\u636Evalue\u6392\u5E8F" aria-hidden="true">#</a></h2><p>\u5F2F\u9053\u8D85\u8F66\uFF1A</p><div class="language-js"><pre><code>  <span class="token comment">// \u5BF9object\u7684value\u6392\u5E8F\u62FF\u5230\u5BF9\u5E94\u7684key\u5217\u8868</span>
  <span class="token keyword">const</span> sortedObjKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>appSuccessMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> appSuccessMap<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">-</span> appSuccessMap<span class="token punctuation">[</span>a<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u518D\u901A\u8FC7\u6307\u5B9Akey\u62FF\u5230\u5185\u5BB9</span>
  <span class="token keyword">const</span> successDataList <span class="token operator">=</span> sortedObjKeys<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> appSuccessMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre></div>`,35),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var f=n(t,[["render",e]]);export{m as __pageData,f as default};
